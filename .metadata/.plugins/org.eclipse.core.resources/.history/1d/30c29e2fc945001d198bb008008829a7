package br.org.serratec.venda.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.org.serratec.venda.domain.Produto;
import br.org.serratec.venda.repository.ProdutoRepository;

@RestController
@RequestMapping("/produtos")
public class ProdutoController {
	@Autowired
	private ProdutoRepository produtoRepository;

	@GetMapping
	public List<Produto> buscarTodos() {
		return produtoRepository.findAll();
	}

	@GetMapping("/{id}")
	public ResponseEntity<Produto> buscaPorId(long id) {
		Optional<Produto> produto = produtoRepository.findById(id);
		if (produto.isPresent()) {
			return ResponseEntity.ok(produto.get());
		}
		return ResponseEntity.notFound().build();
	}

	@PostMapping
	public ResponseEntity<Produto> inserir(@RequestBody Produto produto) {
		Produto produtoInserido = produtoRepository.save(produto);
		return ResponseEntity.status(HttpStatus.CREATED).header("x-data", "01/01/10").body(produtoInserido);
	}

	@PutMapping ("/{id}")
	public ResponseEntity<Produto> atualizar(@PathVariable Long id, @RequestBody Produto produto) {
		Optional<Produto> optionalProduto = produtoRepository.findById(id);
		if (optionalProduto.isPresent()) {
			Produto produtoBanco = optionalProduto.get();
			produtoBanco.setDescricao(produto.getDescricao());
			produtoBanco.setValor(produto.getValor());
			produtoBanco = produtoRepository.save(produtoBanco);
			return ResponseEntity.ok(produtoBanco);
		}
		return ResponseEntity.notFound().header("x-data", "01/01/10").build();

	 }
	@DeleteMapping('/{id}')
	public ResponseEntity<void> excluir (@PathVariable Long id){
		
	}

}

//	private static List<Produto> lista = new ArrayList<Produto>();
//	static {
//		lista.add(new Produto(1, "Mouse", 10.60));
//		lista.add(new Produto(2, "PC", 1500.));
//	}
//
//	@GetMapping
//	public List<Produto> listar() {
//		return lista;
//	}
//
//	@GetMapping("/{id}")
//	public Produto buscar(@PathVariable Integer id) {
//		// Usando função lambda
//		return lista.stream().filter(a -> a.getId().equals(id)).findFirst().orElse(null);
//
//	}
//
//	@PostMapping
//	@ResponseStatus(HttpStatus.CREATED)
//	public Produto inserir(@RequestBody Produto Produto) {
//		lista.add(Produto);
//		return Produto;
//	}
//
//	@DeleteMapping("/{id}")
//	public List<Produto> delete(@PathVariable Integer id) {
//		for (int i = 0; i < lista.size(); i++) {
//			if (lista.get(i).getId().equals(id)) {
//				lista.remove(i);
//				return listar();
//			}
//		}
//		return null;
//	}
//
//	@PutMapping("/{id}")
//	public Produto atualizar(@RequestBody Produto Produto, @PathVariable Integer id) {
//		for (int i = 0; i < lista.size(); i++) {
//			if (lista.get(i).getId().equals(id)) {
//				Produto a = new Produto(id, Produto.getNome(), Produto.getValor());
//				lista.set(i, a);
//				return a;
//			}
//		}
//		return null;
//	}
//}
